- start: '10:30'
  etime: '11:15'
  title: 'Observe and understand RabbitMQ'
  speaker: Gerhard Lazu
  abstract: >-
    RabbitMQ exposes metrics and healthchecks that answer all questions.
    Future RabbitMQ versions will make it easy to visualise and understand
    what happens under the hood. Join me to learn about the future of
    RabbitMQ observability.
  img: /img/speakers/gerhard-lazu.jpg
  co-speaker: Michal Kuratczyk
  co-img: /img/speakers/michal-kuratczyk.jpg
- start: '10:30'
  etime: '11:15'
  title: 'Practical advice for the care and feeding of RabbitMQ'
  speaker: Gavin Roy
  abstract: >-
    After 10 years of heavy use of RabbitMQ in production, common problems,
    patterns, and solutions have emerged. In this talk we will cover architecture,
    configuration and operational management, monitoring, and maybe a disaster story or two.
  img: /img/speakers/gavin-roy.jpg
- start: '11:20'
  etime: '11:45'
  title: 'EventSourcing with RabbitMQ'
  speaker: Riccardo Piccoli
  abstract: >-
    We will go through Softonic's distributed Event Sourcing solution applied to
    its microservices environment, implementing it leveraging RabbitMQ.
  img: /img/speakers/riccardo-piccoli.jpg
  co-speaker:  Basilio Vera
  co-img: /img/speakers/basilio-vera.jpg
- start: '11:20'
  etime: '11:45'
  title: >
    WeWork's "good enough" order guarantee
  speaker: Ilana Sufrin
  abstract: >-
    Through a good understanding of their data needs and a willingness to compromise, Ilana and Avikam figured out how to 
    rearchitect their app's RabbitMQ pipeline in order to save their company developer time and money. 
    They are here to show you a strategy to guarantee message serialization when order matters, 
    and to convince you that sometimes the best solution is just "good enough". 
    This talk dives into a real-life story of using, and fixing, RabbitMQ at WeWork.
  img: /img/speakers/ilana-sufrin.jpg
  co-speaker:  Avikam Agur
  co-img: /img/speakers/avikam-agur.jpg
- start: '11:50'
  etime: '12:35'
  title: 'Feature complete: Uncovering the true cost different RabbitMQ features and configurations'
  speaker: Jack Vanlightly
  abstract: >-
    They call RabbitMQ the swiss army knife of messaging systems, but what impact do all those features have on performance?<br/><br/>
    In this talk we'll review common features and their effect on end-to-end latency, throughput and broker load.
    We'll see concrete numbers and come to actionable conclusions that will help you make more balanced decisions regarding
    the tradeoffs of the powerful functionality available vs performance.
  img: /img/speakers/jack-vanlightly.jpg
- start: '11:50'
  etime: '12:35'
  title: 'Monitoring & scaling based on RabbitMQ telemetry'
  speaker: Omar Elasfar
  abstract: >-
    Zalando's Communication platform products are powered by a RabbitMQ cluster as the broker for all service to
    service communication. A mixed set of work loads between transactional & commercial communication use-cases
    running 24/7 our systems gains their scalability and resilience patterns relying on multiple telemetry points
    we collect and react on in real time. Managing cost efficiency and finding the right spot to launch more
    compute power has been a seamless effort with backlogs as a steering point alongside CPU utilization of
    the consumer application.
  img: /img/speakers/omar-elasfar.jpg
- start: '13:35'
  etime: '14:20'
  title: 'RabbitMQ MQTT vs EMQX'
  speaker: Grigory Starinkin
  abstract: >-
    RabbitMQ is a multi-protocol messaging broker, which, on a vanilla
    installation supports AMQP-0.9-1 (and AMQP-0.8). Through its
    plugin architecture, RabbitMQ may also be configured to act as a
    messaging broker for other protocols such as MQTT, STOMP,
    AMQP-1.0, CoAP, SMTP, etc. EMQX is another emerging MQTT messaging
    broker of high repute and use in industry. Questions arise on
    which one is better for MQTT, or which one to use? RabbitMQ for
    MQTT, or EMQX? Join me in this talk as I answer these questions
    and help users decide on the best choice MQTT broker to use.
- start: '13:35'
  etime: '14:20'
  title: 'Do not guess, Trace'
  speaker: Kacper Mentel
  abstract: >-
    RabbitMQ runs on a battle-tested Erlang VM which provides many exceptional features for Distributed,
    Fault-Tolerant, Highly Available and Robust systems out of the box. But this doesn't always prevent
    our RabbitMQ installation from misbehaving without clear signs of what's wrong. It can be frustrating
    for operators and developers. Here Tracing, another Erlang feature, comes to the rescue!
    There are a number of techniques that use it to find a root cause of a failure. I'll guide you through them in this talk.
  img: /img/speakers/kacper-mentel.jpg
- start: '14:25'
  etime: '14:50'
  title: 'Rapidly building streaming applications with RabbitMQ, Spring Cloud Streams and SCDF'
  speaker: Madhav Sathe
  abstract: >-
    In this session you will learn how to use Spring Cloud Streams with RabbitMQ.
    We will build data pipeline using Spring Cloud Data Flow. We will demonstrate
    how applications can be deployed and scaled using Cloud Foundry. This is a live-coding session.
  img: /img/speakers/madhav-sathe.jpg
- start: '14:25'
  etime: '14:50'
  title: 'How to use multiple RabbitMQ brokers with SpringBoot'
  speaker: Wander Costa
  abstract: >-
    How to connect your SpringBoot application to multiple RabbitMQ brokers?
    But why do you need multiple RabbitMQ brokers in the first place? The solution I'm
    going to present solves different use cases: from brokers in different PAAS providers
    to dedicated brokers for different use cases or contexts.
    To solve these problems in hundreds of micro-services, we wrote this simple-to-use open source library.
  img: /img/speakers/wander-costa.jpg
- start: '14:55'
  etime: '15:40'
  title: 'Running RabbitMQ at Scale'
  speaker: Lovisa Johansson
  abstract: >-
    CloudAMQP provides RabbitMQ clusters as a service, but what happens behind the scenes?
    CloudAMQP is powered by a number of RabbitMQ servers that provide various functionality in setting up,
    configuring, monitoring, updating and modifying our RabbitMQ service. In this talk we'll go into how AMQP
    and RabbitMQ can be used to power a micro service architecture from the bottom up with flexibility and reliability.
  img: /img/speakers/lovisa-johansson.jpg
  co-speaker:  Anders BÃ¤lter
  co-img: /img/speakers/anders-balter.jpg
